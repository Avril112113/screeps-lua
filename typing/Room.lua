-- WARNING: THIS FILE IS GENERATED, DO NOT MODIFY.


--- <p>An object representing the room in which your units and structures are in.It can be used to look around, find paths, etc. Every <code>RoomObject</code> in the room containsits linked <code>Room</code> instance in the <code>room</code> property.</p>
---@class Room
--- <p>The Controller structure of this room, if present, otherwise undefined.</p>
---@field controller StructureController
--- <p>Total amount of energy available in all spawns and extensions in the room.</p>
---@field energyAvailable number
--- <p>Total amount of <code>energyCapacity</code> of all spawns and extensions in the room.</p>
---@field energyCapacityAvailable number
--- <p>A shorthand to <code>Memory.rooms[room.name]</code>. You can use it for quick access the roomâ€™s specific memory data object. <a href="https://docs.screeps.com/global-objects.html#Memory-object">Learn more about memory</a></p>
---@field memory any
--- <p>The name of the room.</p>
---@field name string
--- <p>The Storage structure of this room, if present, otherwise undefined.</p>
---@field storage StructureStorage
--- <p>The Terminal structure of this room, if present, otherwise undefined.</p>
---@field terminal StructureTerminal
--- <p>A <a href="https://docs.screeps.com/api/#RoomVisual">RoomVisual</a> object for this room. You can use this object to draw simple shapes (lines, circles, text labels) in the room.</p>
---@field visual RoomVisual
--- <p>Serialize a path array into a short string representation, which is suitable to store in memory.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>path</code></td><td>array</td><td><p>A path array retrieved from <code><a href="https://docs.screeps.com/api/#Room.findPath">Room.findPath</a></code>.</p></td></tr></tbody></table>
---@field serializePath fun(path:any)
--- <p>Deserialize a short string path representation into an array form.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>path</code></td><td>string</td><td><p>A serialized path string.</p></td></tr></tbody></table>
---@field deserializePath fun(path:any)
--- <p>Create new <a href="https://docs.screeps.com/api/#ConstructionSite">ConstructionSite</a> at the specified location.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>x</code></td><td>number</td><td><p>The X position.</p></td></tr><tr><td><code>y</code></td><td>number</td><td><p>The Y position.</p></td></tr><tr><td><code>pos</code></td><td>object</td><td><p>Can be a <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a> object or any object containing <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a>.</p></td></tr><tr><td><code>structureType</code></td><td>string</td><td><p>One of the <code>STRUCTURE_*</code> constants.</p></td></tr><tr><td><code>name</code><br/><em>optional</em></td><td>string</td><td><p>The name of the structure, for structures that support it (currently only spawns). The name length limit is 100 characters.</p></td></tr></tbody></table>
---@field createConstructionSite fun(x:any,y:any,structureType:any,name:any?)|fun(pos:any,structureType:any,name:any?)
--- <p>Create new <a href="https://docs.screeps.com/api/#Flag">Flag</a> at the specified location.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>x</code></td><td>number</td><td><p>The X position.</p></td></tr><tr><td><code>y</code></td><td>number</td><td><p>The Y position.</p></td></tr><tr><td><code>pos</code></td><td>object</td><td><p>Can be a <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a> object or any object containing <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a>.</p></td></tr><tr><td><code>name</code><br/><em>optional</em></td><td>string</td><td><p>The name of a new flag. It should be unique, i.e. the <code>Game.flags</code> object should not contain another flag with the same name (hash key). If not defined, a random name will be generated. The maximum length is 100 characters.</p></td></tr><tr><td><code>color</code><br/><em>optional</em></td><td>string</td><td><p>The color of a new flag. Should be one of the <code>COLOR_*</code> constants. The default value is <code>COLOR_WHITE</code>.</p></td></tr><tr><td><code>secondaryColor</code><br/><em>optional</em></td><td>string</td><td><p>The secondary color of a new flag. Should be one of the <code>COLOR_*</code> constants. The default value is equal to <code>color</code>.</p></td></tr></tbody></table>
---@field createFlag fun(x:any,y:any,name:any?,color:any?,secondaryColor:any?)|fun(pos:any,name:any?,color:any?,secondaryColor:any?)
--- <p>Find all objects of the specified type in the room. Results are cached automatically for the specified room and type before applying any custom filters. This automatic cache lasts until the end of the tick.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>type</code></td><td>number</td><td><p>One of the <code>FIND_*</code> constants.</p></td></tr><tr><td><code>opts</code><br/><em>optional</em></td><td>object</td><td><p>An object with additional options:                    </p><ul><li><div class="api-arg-title">filter</div><div class="api-arg-type">object, function, string</div><div class="api-arg-desc">The result list will be filtered using the <a href="https://lodash.com/docs#filter" rel="noopener" target="_blank">Lodash.filter</a> method.</div></li></ul><p></p></td></tr></tbody></table>
---@field find fun(type:any,opts:any?)
--- <p>Find the exit direction en route to another room. Please note that this method is not required for inter-room movement, you can simply pass the target in another room into <a href="https://docs.screeps.com/api/#Creep.moveTo"><code>Creep.moveTo</code></a> method.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>room</code></td><td>string, <a href="https://docs.screeps.com/api/#Room">Room</a></td><td><p>Another room name or room object.</p></td></tr></tbody></table>
---@field findExitTo fun(room:any)
--- <p>Find an optimal path inside the room between fromPos and toPos using <a href="http://en.wikipedia.org/wiki/Jump_point_search" target="_blank">Jump Point Search algorithm</a>.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>fromPos</code></td><td><a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a></td><td><p>The start position.</p></td></tr><tr><td><code>toPos</code></td><td><a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a></td><td><p>The end position.</p></td></tr><tr><td><code>opts</code><br/><em>optional</em></td><td>object</td><td><p>An object containing additonal pathfinding flags:</p><ul><li><div class="api-arg-title">ignoreCreeps</div><div class="api-arg-type">boolean</div><div class="api-arg-desc">Treat squares with creeps as walkable. Can be useful with too many moving creeps around or in some other cases. The default value is false.</div></li><li><div class="api-arg-title">ignoreDestructibleStructures</div><div class="api-arg-type">boolean</div><div class="api-arg-desc">Treat squares with destructible structures (constructed walls, ramparts, spawns, extensions) as walkable. The default value is false.</div></li><li><div class="api-arg-title">ignoreRoads</div><div class="api-arg-type">boolean</div><div class="api-arg-desc">Ignore road structures. Enabling this option can speed up the search. The default value is false. This is only used when the new <a href="https://docs.screeps.com/api/#PathFinder"><code>PathFinder</code></a> is enabled.</div></li><li><div class="api-arg-title">costCallback</div><div class="api-arg-type">function(string, CostMatrix)</div><div class="api-arg-desc">You can use this callback to modify a <a href="https://docs.screeps.com/api/#PathFinder-CostMatrix"><code>CostMatrix</code></a> for any room during the search. The callback accepts two arguments, <code>roomName</code> and <code>costMatrix</code>. Use the <code>costMatrix</code> instance to make changes to the positions costs. If you return a new matrix from this callback, it will be used instead of the built-in cached one. This option is only used when the new <a href="https://docs.screeps.com/api/#PathFinder"><code>PathFinder</code></a> is enabled.</div></li><li><div class="api-arg-title">ignore</div><div class="api-arg-type">array</div><div class="api-arg-desc">An array of the room's objects or <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a> objects which should be treated as walkable tiles during the search. This option cannot be used when the new <a href="https://docs.screeps.com/api/#PathFinder"><code>PathFinder</code></a> is enabled (use <code>costCallback</code> option instead).</div></li><li><div class="api-arg-title">avoid</div><div class="api-arg-type">array</div><div class="api-arg-desc">An array of the room's objects or <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a> objects which should be treated as obstacles during the search. This option cannot be used when the new <a href="https://docs.screeps.com/api/#PathFinder"><code>PathFinder</code></a> is enabled (use <code>costCallback</code> option instead).</div></li><li><div class="api-arg-title">maxOps</div><div class="api-arg-type">number</div><div class="api-arg-desc">The maximum limit of possible pathfinding operations. You can limit CPU time used for the search based on ratio 1 op ~ 0.001 CPU. The default value is 2000.</div></li><li><div class="api-arg-title">heuristicWeight</div><div class="api-arg-type">number</div><div class="api-arg-desc">Weight to apply to the heuristic in the A<em> formula <code>F = G + weight </code></em> H. Use this option only if you understand the underlying A* algorithm mechanics! The default value is 1.2.</div></li><li><div class="api-arg-title">serialize</div><div class="api-arg-type">boolean</div><div class="api-arg-desc">If true, the result path will be serialized using <code><a href="https://docs.screeps.com/api/#Room.serializePath">Room.serializePath</a></code>. The default is false.</div></li><li><div class="api-arg-title">maxRooms</div><div class="api-arg-type">number</div><div class="api-arg-desc">The maximum allowed rooms to search. The default (and maximum) is 16. This is only used when the new <a href="https://docs.screeps.com/api/#PathFinder"><code>PathFinder</code></a> is enabled.</div></li><li><div class="api-arg-title">range</div><div class="api-arg-type">number</div><div class="api-arg-desc">Find a path to a position in specified linear range of target. The default is 0.</div></li><li><div class="api-arg-title">plainCost</div><div class="api-arg-type">number</div><div class="api-arg-desc">Cost for walking on plain positions. The default is 1.</div></li><li><div class="api-arg-title">swampCost</div><div class="api-arg-type">number</div><div class="api-arg-desc">Cost for walking on swamp positions. The default is 5.</div></li></ul></td></tr></tbody></table>
---@field findPath fun(fromPos:any,toPos:any,opts:any?):({x:integer,y:integer,dx:integer,dy:integer,direction:string}[])
--- <p>Returns an array of events happened on the previous tick in this room.  </p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>raw</code></td><td>boolean</td><td><p>If this parameter is false or undefined, the method returns an object parsed using <code>JSON.parse</code> which incurs some CPU cost on the first access (the return value is cached on subsequent calls). If <code>raw</code> is truthy, then raw JSON in string format is returned.</p></td></tr></tbody></table>
---@field getEventLog fun(raw:any?)
--- <p>Creates a <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a> object at the specified location.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>x</code></td><td>number</td><td><p>The X position.</p></td></tr><tr><td><code>y</code></td><td>number</td><td><p>The Y position.</p></td></tr></tbody></table>
---@field getPositionAt fun(x:any,y:any)
--- <p>Get a <a href="https://docs.screeps.com/api/#Room-Terrain"><code>Room.Terrain</code></a> object which provides fast access to static terrain data. This method works for any room in the world even if you have no access to it.</p>
---@field getTerrain fun()
--- <p>Get the list of objects at the specified room position.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>x</code></td><td>number</td><td><p>X position in the room.</p></td></tr><tr><td><code>y</code></td><td>number</td><td><p>Y position in the room.</p></td></tr><tr><td><code>target</code></td><td>object</td><td><p>Can be a <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a> object or any object containing <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a>.</p></td></tr></tbody></table>
---@field lookAt fun(x:any,y:any):(({type:string}|table)[])|fun(target:any):(({type:string}|table)[])
--- <p>Get the list of objects at the specified room area.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>top</code></td><td>number</td><td><p>The top Y boundary of the area.</p></td></tr><tr><td><code>left</code></td><td>number</td><td><p>The left X boundary of the area.</p></td></tr><tr><td><code>bottom</code></td><td>number</td><td><p>The bottom Y boundary of the area.</p></td></tr><tr><td><code>right</code></td><td>number</td><td><p>The right X boundary of the area.</p></td></tr><tr><td><code>asArray</code><br/><em>optional</em></td><td>boolean</td><td><p>Set to true if you want to get the result as a plain array.</p></td></tr></tbody></table>
---@field lookAtArea fun(top:any,left:any,bottom:any,right:any,asArray:any?):(table<integer,table<integer,({type:string}|table)[]>>|({x:integer,y:integer,type:string}|table)[])
--- <p>Get an object with the given type at the specified room position.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>type</code></td><td>string</td><td><p>One of the <code>LOOK_*</code> constants.</p></td></tr><tr><td><code>x</code></td><td>number</td><td><p>X position in the room.</p></td></tr><tr><td><code>y</code></td><td>number</td><td><p>Y position in the room.</p></td></tr><tr><td><code>target</code></td><td>object</td><td><p>Can be a <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a> object or any object containing <a href="https://docs.screeps.com/api/#RoomPosition">RoomPosition</a>.</p></td></tr></tbody></table>
---@field lookForAt fun(type:any,x:any,y:any)|fun(type:any,target:any)
--- <p>Get the list of objects with the given type at the specified room area.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>type</code></td><td>string</td><td><p>One of the <code>LOOK_*</code> constants.</p></td></tr><tr><td><code>top</code></td><td>number</td><td><p>The top Y boundary of the area.</p></td></tr><tr><td><code>left</code></td><td>number</td><td><p>The left X boundary of the area.</p></td></tr><tr><td><code>bottom</code></td><td>number</td><td><p>The bottom Y boundary of the area.</p></td></tr><tr><td><code>right</code></td><td>number</td><td><p>The right X boundary of the area.</p></td></tr><tr><td><code>asArray</code><br/><em>optional</em></td><td>boolean</td><td><p>Set to true if you want to get the result as a plain array.</p></td></tr></tbody></table>
---@field lookForAtArea fun(type:any,top:any,left:any,bottom:any,right:any,asArray:any?):(table<integer,table<integer,table[]>>|{x:integer,y:integer,structure:table}[])
---@field Terrain Room.Terrain
local Room = {}

--- <p>An object which provides fast access to room terrain data. These objects can be constructed for any room in the world even if you have no access to it.</p> <p>Technically every <code>Room.Terrain</code> object is a very lightweight adapter to underlying static terrain buffers with corresponding minimal accessors.</p>
---@class Room.Terrain
--- <p>Get terrain type at the specified room position by <code>(x,y)</code> coordinates. Unlike the <a href="https://docs.screeps.com/api/#Game.map.getTerrainAt"><code>Game.map.getTerrainAt(...)</code></a> method, this one doesn't perform any string operations and returns integer terrain type values (see below).</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>x</code></td><td>number</td><td><p>X position in the room.</p></td></tr><tr><td><code>y</code></td><td>number</td><td><p>Y position in the room.</p></td></tr></tbody></table>
---@field get fun(x:any,y:any)
--- <p>Get copy of underlying static terrain buffer. <strong>Current underlying representation is <code>Uint8Array</code></strong>.</p> <table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>destinationArray</code><br/><em>optional</em></td><td>Uint8Array</td><td><p>A typed array view in which terrain will be copied to.</p></td></tr></tbody></table> <p><strong><em>WARNING:</em></strong> <em>this method relies on underlying representation of terrain data. This is the fastest way to obtain terrain data of the whole room (2500 tiles), but users should keep in mind that it can be marked as deprecated anytime in the future, or return value type can be changed due to underlying data representation changing.</em></p> <p>See usage examples. Learn more about <a href="https://docs.screeps.com/modules.html#Binary-modules"><em>binary modules</em></a>.</p>
---@field getRawBuffer fun(destinationArray:any?)
local Terrain = {}
